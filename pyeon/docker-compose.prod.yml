version: "3.8"

services:
  app:
    image: chisae/pyeondongbu-app:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PROD_DB_HOST=db
      - PROD_DB_PORT=3306
      - PROD_DB_NAME=pyeon
      - PROD_DB_USERNAME=${PROD_DB_USERNAME}
      - PROD_DB_PASSWORD=${PROD_DB_PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=${PROD_REDIS_PASSWORD}
      - PROD_REDIS_HOST=redis
      - PROD_REDIS_PORT=6379
      - PROD_REDIS_PASSWORD=${PROD_REDIS_PASSWORD}
      - PROD_SERVER_PORT=8080
      - PROD_JWT_SECRET=${PROD_JWT_SECRET_KEY}
      - PROD_GOOGLE_CLIENT_ID=${PROD_GOOGLE_CLIENT_ID}
      - PROD_GOOGLE_CLIENT_SECRET=${PROD_GOOGLE_CLIENT_SECRET}
      - PROD_GOOGLE_REDIRECT_URI=${PROD_GOOGLE_REDIRECT_URI}
      - PROD_AWS_ACCESS_KEY=${PROD_AWS_ACCESS_KEY}
      - PROD_AWS_SECRET_KEY=${PROD_AWS_SECRET_KEY}
      - PROD_AWS_REGION=${PROD_AWS_REGION}
      - PROD_S3_BUCKET=${PROD_S3_BUCKET}
      - PROD_S3_FOLDER=${PROD_S3_FOLDER}
      - PROD_CORS_ORIGIN=${PROD_CORS_ORIGIN}
      - PROD_DOMAIN=pyeondongbu.com
      - PROD_FRONTEND_URL=${PROD_CORS_ORIGIN}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: mysql:8.0.26
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=pyeon
      - MYSQL_ROOT_PASSWORD=${PROD_DB_PASSWORD}
      - TZ=Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --default-time-zone=+09:00
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${PROD_DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${PROD_REDIS_PASSWORD}"]
    volumes:
      - redis_data_prod:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${PROD_REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data_prod:
  redis_data_prod:
